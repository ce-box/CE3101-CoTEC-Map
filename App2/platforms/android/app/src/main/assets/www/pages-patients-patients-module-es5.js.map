{"version":3,"sources":["webpack:///src/app/pages/patients/patients.page.html","webpack:///src/app/module/statusEnum.ts","webpack:///src/app/pages/patients/patients-routing.module.ts","webpack:///src/app/pages/patients/patients.module.ts","webpack:///src/app/pages/patients/patients.page.scss","webpack:///src/app/pages/patients/patients.page.ts","webpack:///src/app/service/data-base.service.ts"],"names":["statusEnum","routes","path","component","PatientsPageRoutingModule","imports","forChild","exports","PatientsPageModule","declarations","PatientsPage","modalController","db","listPatients1","Name","LastName","Id","Age","Nationality","Region","Pathology","Status","ACTIVE","Medication","Hospitalize","UCI","keyPatients","console","log","getDatabaseState","subscribe","rdy","getContacts","devs","patientsDb","getPatients","idM","create","cssClass","componentProps","id","data","keysParent","modal","present","selector","template","DataBaseService","http","sqlite","plt","sqlitePorter","dbReady","patients","contacts","ready","then","sql","name","location","executeSql","e","get","responseType","importSqlToDb","database","_","next","error","asObservable","patient","rows","length","i","push","item","lastName","age","row","region","status","hospitalize","uci","nationality","pathology","medication","dataR","loadpatient","dev","query","contact","Address","email","loadContact","providedIn"],"mappings":"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","file":"pages-patients-patients-module-es5.js","sourcesContent":["export default \"<ion-content>\\n  <div>\\n    <ion-button routerLink=\\\"/home\\\">\\n      <ion-icon name=\\\"arrow-back-outline\\\"></ion-icon>\\n    </ion-button>\\n    <h3>Management of Patients</h3>\\n    <div class=\\\"buttons\\\">\\n      <ion-button (click)=\\\"presentModal('add')\\\">Agregar</ion-button>\\n      <ion-button>Eliminar</ion-button>\\n      <ion-button (click)=\\\"presentModal('edit')\\\">Editar</ion-button>\\n    </div>\\n    <div class=\\\"table\\\">\\n      <ion-grid>\\n        <ion-row class=\\\"titles\\\">\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>Name</ion-text>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>LastName</ion-text>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>Id</ion-text>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row *ngFor=\\\"let item of listPatients1\\\">\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>{{item.Name}}</ion-text>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>{{item.LastName}}</ion-text>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>{{item.Id}}</ion-text>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-grid>\\n        <ion-row class=\\\"titles\\\">\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>Region</ion-text>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>Age</ion-text>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>Status</ion-text>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row *ngFor=\\\"let item of listPatients1\\\">\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>{{item.Region}}</ion-text>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>{{item.Age}}</ion-text>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>{{item.Status}}</ion-text>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-grid>\\n        <ion-row class=\\\"titles\\\">\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>Hospitalize</ion-text>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>UCI</ion-text>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>Nationality</ion-text>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row *ngFor=\\\"let item of listPatients1\\\">\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>{{item.Hospitalize}}</ion-text>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>{{item.UCI}}</ion-text>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n            <ion-text>{{item.Nationality}}</ion-text>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-grid>\\n        <ion-row class=\\\"titles\\\">\\n          <ion-col size=\\\"6\\\">\\n            <ion-text>Pathology</ion-text>\\n          </ion-col>\\n          <ion-col size=\\\"6\\\">\\n            <ion-text>Medication</ion-text>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row *ngFor=\\\"let item of listPatients1\\\">\\n          <ion-col size=\\\"6\\\">\\n            {{item.Pathology}}\\n          </ion-col>\\n          <ion-col size=\\\"6\\\">\\n            {{item.Medication}}\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </div>\\n  </div>\\n</ion-content>\";","export enum statusEnum{\n    ACTIVE = 'Activa',\n    INFECTED = 'Contagiada',\n    RECOVERED = 'Recuperada',\n    DEAD = 'Muerta'\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PatientsPage } from './patients.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PatientsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PatientsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PatientsPageRoutingModule } from './patients-routing.module';\n\nimport { PatientsPage } from './patients.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PatientsPageRoutingModule\n  ],\n  declarations: [PatientsPage]\n})\nexport class PatientsPageModule {}\n","export default \"ion-content div {\\n  background-color: #7ea470;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\nion-content div ion-button {\\n  align-self: flex-start;\\n  --background: transparent;\\n}\\nion-content div h3 {\\n  margin-top: 20px;\\n  color: white;\\n}\\nion-content div div.buttons {\\n  margin: 10px 0px;\\n  display: flex;\\n  flex-direction: row;\\n}\\nion-content div div.buttons ion-button {\\n  --background: #3ac0bb;\\n  --color: #343f4b;\\n}\\nion-content div ion-grid {\\n  color: white;\\n  width: 100%;\\n}\\nion-content div ion-grid ion-row {\\n  border-bottom: 1px solid gray;\\n}\\nion-content div ion-grid ion-row.titles {\\n  background: #3ac0bb;\\n  border-bottom: none;\\n  margin: 10px 0px 0px;\\n}\\nion-content div ion-grid ion-row ion-col ul {\\n  padding-left: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2JicmVuZXMvcHJvamVjdHMvVEVDL0NFMzEwMS1Db1RFQy1NYXAvQXBwMi9zcmMvYXBwL3BhZ2VzL3BhdGllbnRzL3BhdGllbnRzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvcGF0aWVudHMvcGF0aWVudHMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0kseUJBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FDQVI7QURDUTtFQUNJLHNCQUFBO0VBQ0EseUJBQUE7QUNDWjtBRENRO0VBQ0ksZ0JBQUE7RUFDQSxZQUFBO0FDQ1o7QURDUTtFQUNJLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FDQ1o7QURBWTtFQUNJLHFCQUFBO0VBQ0EsZ0JBQUE7QUNFaEI7QURDUTtFQUNJLFlBQUE7RUFDQSxXQUFBO0FDQ1o7QURBWTtFQUNJLDZCQUFBO0FDRWhCO0FERGdCO0VBQ0ksbUJBQUE7RUFDQSxtQkFBQTtFQUNBLG9CQUFBO0FDR3BCO0FEQW9CO0VBQ0ksa0JBQUE7QUNFeEIiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wYXRpZW50cy9wYXRpZW50cy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XG4gICAgZGl2IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzdlYTQ3MDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGlvbi1idXR0b24ge1xuICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbiAgICAgICAgICAgIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICAgIH1cbiAgICAgICAgaDMge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgfVxuICAgICAgICBkaXYuYnV0dG9ucyB7XG4gICAgICAgICAgICBtYXJnaW46IDEwcHggMHB4O1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgICAgICBpb24tYnV0dG9uIHtcbiAgICAgICAgICAgICAgICAtLWJhY2tncm91bmQ6ICMzYWMwYmI7XG4gICAgICAgICAgICAgICAgLS1jb2xvcjogIzM0M2Y0YjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpb24tZ3JpZCB7XG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGlvbi1yb3cge1xuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBncmF5O1xuICAgICAgICAgICAgICAgICYudGl0bGVzIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogIzNhYzBiYjtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAxMHB4IDBweCAwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlvbi1jb2wge1xuICAgICAgICAgICAgICAgICAgICB1bCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCJpb24tY29udGVudCBkaXYge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjN2VhNDcwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbmlvbi1jb250ZW50IGRpdiBpb24tYnV0dG9uIHtcbiAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbiAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cbmlvbi1jb250ZW50IGRpdiBoMyB7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbmlvbi1jb250ZW50IGRpdiBkaXYuYnV0dG9ucyB7XG4gIG1hcmdpbjogMTBweCAwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG59XG5pb24tY29udGVudCBkaXYgZGl2LmJ1dHRvbnMgaW9uLWJ1dHRvbiB7XG4gIC0tYmFja2dyb3VuZDogIzNhYzBiYjtcbiAgLS1jb2xvcjogIzM0M2Y0Yjtcbn1cbmlvbi1jb250ZW50IGRpdiBpb24tZ3JpZCB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgd2lkdGg6IDEwMCU7XG59XG5pb24tY29udGVudCBkaXYgaW9uLWdyaWQgaW9uLXJvdyB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBncmF5O1xufVxuaW9uLWNvbnRlbnQgZGl2IGlvbi1ncmlkIGlvbi1yb3cudGl0bGVzIHtcbiAgYmFja2dyb3VuZDogIzNhYzBiYjtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgbWFyZ2luOiAxMHB4IDBweCAwcHg7XG59XG5pb24tY29udGVudCBkaXYgaW9uLWdyaWQgaW9uLXJvdyBpb24tY29sIHVsIHtcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { DataBaseService } from 'src/app/service/data-base.service';\nimport { EditComponent } from 'src/app/components/edit/edit.component';\nimport { statusEnum } from 'src/app/module/statusEnum';\n\n@Component({\n  selector: 'app-patients',\n  templateUrl: './patients.page.html',\n  styleUrls: ['./patients.page.scss'],\n})\nexport class PatientsPage implements OnInit {\n  listPatients1 = [\n    {\n      Name: 'Bertha',\n      LastName: 'Brenes Brenes',\n      Id: 304980542,\n      Age: 23,\n      Nationality: 'costarricense',\n      Region: 'Cartago',\n      Pathology: ['asthmatic', 'hypertensive'],\n      Status: statusEnum.ACTIVE,\n      Medication: 'Ibuprofen',\n      Hospitalize: true,\n      UCI: true\n    },\n    {\n      Name: 'Alberto',\n      LastName: 'Brenes Brenes',\n      Id: 304980541,\n      Age: 23,\n      Nationality: 'costarricense',\n      Region: 'Cartago',\n      Pathology: ['asthmatic', 'hypertensive'],\n      Status: statusEnum.ACTIVE,\n      Medication: ['Ibuprofen'],\n      Hospitalize: true,\n      UCI: true\n    },\n    {\n      Name: 'Esmaik',\n      LastName: 'Brenes Brenes',\n      Id: 304780542,\n      Age: 23,\n      Nationality: 'costarricense',\n      Region: 'Cartago',\n      Pathology: ['asthmatic', 'hypertensive'],\n      Status: statusEnum.ACTIVE,\n      Medication: ['Ibuprofen'],\n      Hospitalize: true,\n      UCI: true\n    }\n  ];\n  keyPatients = [\n    'Name',\n    'LastName',\n    'Id',\n    'Age',\n    'Nationality',\n    'Region',\n    'Pathology',\n    'Status',\n    'Medication',\n    'Hospitalize',\n    'UCI'\n  ];\n  patientsDb: any;\n  patientDb: any;\n  constructor( public modalController: ModalController, private db: DataBaseService) { }\n\n  ngOnInit() {\n    console.log('ngOnit');\n    this.db.getDatabaseState().subscribe(rdy => {\n      console.log(rdy);\n      if (rdy) {\n        console.log('ready', rdy);\n        this.db.getContacts().subscribe(devs => {\n          this.patientsDb = devs;\n          console.log('inside ready', devs);\n        });\n      }\n      console.log(this.db.getPatients());\n    });\n  }\n  async presentModal(idM: string) {\n    const modal = await this.modalController.create({\n      component: EditComponent,\n      cssClass: 'EditComponent',\n      componentProps: {\n        id: idM,\n        data: this.listPatients1,\n        keysParent: this.keyPatients\n      }\n    });\n    return await modal.present();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Platform } from '@ionic/angular';\nimport { SQLitePorter } from '@ionic-native/sqlite-porter/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataBaseService {\n  private database: SQLiteObject;\n  private dbReady: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  patients = new BehaviorSubject([]);\n  /**\n   * Contact\n   */\n  contacts = new BehaviorSubject([]);\n  /**\n   * First method of the service\n   * @param http Controller for the http Client\n   * @param sqlite Controller for the sqlite\n   * @param plt Controller for the platform\n   * @param sqlitePorter Controller fro the porter of sql\n   */\n  constructor(\n    private http: HttpClient,\n    private sqlite: SQLite,\n    private plt: Platform,\n    private sqlitePorter: SQLitePorter) {\n    console.log('ngInit database');\n    this.plt.ready().then(() => {\n      console.log('ready platform');\n      const sql = this.sqlite.create({\n        name: 'patient.db',\n        location: 'default'\n      })\n      .then((db: SQLiteObject) => {\n        db.executeSql('create table danceMoves(name VARCHAR(32))', [])\n          .then(() => console.log('Executed SQL'))\n          .catch(e => console.log(e));\n      })\n      .catch(e => console.log(e));\n    });\n  }\n  seedDatabase() {\n    console.log('access');\n    this.http.get('assets/data/seed.sql', { responseType: 'text' })\n      .subscribe(sql => {\n        this.sqlitePorter.importSqlToDb(this.database, sql)\n          .then(_ => {\n            this.getContacts();\n            this.getPatients();\n            this.dbReady.next(true);\n          })\n          .catch(e => console.error(e));\n      });\n  }\n  getDatabaseState() {\n    return this.dbReady.asObservable();\n  }\n  getContacts(): Observable<any[]> {\n    return this.contacts.asObservable();\n  }\n  getPatients(): Observable<any[]> {\n    return this.patients.asObservable();\n  }\n  /**\n   * Patient Management\n   */\n  loadpatient() {\n    return this.database.executeSql('SELECT * FROM patient', []).then(data => {\n      const patient: any[] = [];\n      if (data.rows.length > 0) {\n        for (let i = 0; i < data.rows.length; i++) {\n          patient.push({\n            id: data.rows.item(i).id,\n            name: data.rows.item(i).name,\n            lastName: data.rows.item(i).lastName,\n            age: data.row.item(i).age,\n            region: data.row.item(i).region,\n            status: data.row.item(i).status,\n            hospitalize: data.row.item(i).hospitalize,\n            uci: data.row.item(i).uci,\n            nationality: data.row.item(i).nationality,\n            pathology: data.row.item(i).pathology,\n            medication: data.row.item(i).medication\n          });\n        }\n      }\n      this.patients.next(patient);\n    });\n  }\n\n  addPatient(Name, LastName, Id, Age, Nationality, Region, Pathology, Status, Medication, Hospitalize, UCI) {\n    const data = [Name, LastName, Id, Age, Nationality, Region, Pathology, Status, Medication, Hospitalize, UCI];\n    return this.database.executeSql('INSERT INTO patient (Name, LastName, Id, Age, Nationality, Region, Pathology, Status, Medication, Hospitalize, UCI) VALUES (?, ?, ?)', data).then(dataR => {\n      console.log('data add', dataR);\n      this.loadpatient();\n    });\n  }\n\n  getPatient(id): Promise<any> {\n    return this.database.executeSql('SELECT * FROM patient WHERE id = ?', [id]).then(data => {\n      return {\n        id: data.rows.item(0).id,\n        name: data.rows.item(0).name,\n        lastName: data.rows.item(0).lastName,\n        age: data.row.item(0).age,\n        region: data.row.item(0).region,\n        status: data.row.item(0).status,\n        Hospitalize: data.row.item(0).Hospitalize,\n        UCI: data.row.item(0).UCI,\n        nationality: data.row.item(0).nationality,\n        pathology: data.row.item(0).pathology,\n        medication: data.row.item(0).medication\n      };\n    });\n  }\n\n  deletePatient(id) {\n    return this.database.executeSql('DELETE FROM patient WHERE id = ?', [id]).then(_ => {\n      this.loadpatient();\n    });\n  }\n\n  updatePatient(dev: any) {\n    // tslint:disable-next-line: max-line-length\n    const data = [dev.name, dev.LastName, dev.Id, dev.Age, dev.Nationality, dev.Region, dev.Pathology, dev.Status, dev.Medication, dev.Hospitalize, dev.UCI];\n    return this.database.executeSql(`UPDATE patient SET name = ?, LastName = ?, Age = ?, Nationality = ?, Region = ?, Status = ?, Medication = ?, Hospitalize = ?, UCI = ? WHERE Id = ${dev.id}`, data).then(dataR => {\n      console.log('data update', dataR);\n      this.loadpatient();\n    });\n  }\n\n  /**\n   * Contact management\n   */\n  loadContact() {\n    // tslint:disable-next-line: max-line-length\n    const query = 'SELECT * FROM contact';\n    return this.database.executeSql(query, []).then(data => {\n      const contact = [];\n      if (data.rows.length > 0) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < data.rows.length; i++) {\n          contact.push({\n            Id: data.rows.item(0).id,\n            Name: data.rows.item(0).name,\n            LastName: data.rows.item(0).lastName,\n            Age: data.row.item(0).age,\n            Address: data.row.item(0).Address,\n            Nationality: data.row.item(0).nationality,\n            Pathology: data.row.item(0).pathology,\n            email: data.row.item(0).email\n          });\n        }\n      }\n      this.contacts.next(contact);\n    });\n  }\n\n  addContact(Name, LastName, Id, Age, Nationality, Address, Pathology, email) {\n    const data = [Name, LastName, Id, Age, Nationality, Address, Pathology, email];\n    // tslint:disable-next-line: max-line-length\n    return this.database.executeSql('INSERT INTO contact (Name, LastName, Id, Age, Nationality, Address, Pathology, email) VALUES (?, ?, ?, ?, ?, ?, ?, ?)', data).then(dataR => {\n      console.log('data add Contact', dataR);\n      this.loadContact();\n    });\n  }\n  updateContact(dev: any) {\n    // tslint:disable-next-line: max-line-length\n    const data = [dev.name, dev.LastName, dev.Id, dev.Age, dev.Nationality, dev.Address, dev.Pathology, dev.email];\n    return this.database.executeSql(`UPDATE contact SET name = ?, LastName = ?, Age = ?, Nationality = ?, Address = ?, email = ? WHERE Id = ${dev.Id}`, data).then(dataR => {\n      console.log('data update', dataR);\n      this.loadpatient();\n    });\n  }\n  deleteContact(id) {\n    return this.database.executeSql('DELETE FROM contact WHERE id = ?', [id]).then(_ => {\n      this.loadContact();\n    });\n  }\n  getContact(id): Promise<any> {\n    return this.database.executeSql('SELECT * FROM contact WHERE id = ?', [id]).then(data => {\n      return {\n        Id: data.rows.item(0).id,\n        Name: data.rows.item(0).name,\n        LastName: data.rows.item(0).lastName,\n        Age: data.row.item(0).age,\n        Address: data.row.item(0).Address,\n        Nationality: data.row.item(0).nationality,\n        Pathology: data.row.item(0).pathology,\n        email: data.row.item(0).email\n      };\n    });\n  }\n}\n"]}